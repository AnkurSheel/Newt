trigger:
    branches:
        include:
            - master
            - dev
            - azure_pipelines
    tags:
        include:
            - "*"

jobs:
    # - job: Variables
    #   steps:
    #       - script: |
    #             echo Build.SourceBranch $(Build.SourceBranch)
    #             echo Build.SourceVersionMessage $(Build.SourceVersionMessage)
    #         displayName: setvarStep

    - job: Version_And_Tag
      # dependsOn: Variables
      condition: not(contains(variables['Build.SourceBranch'], 'tag'))
      steps:
          - task: NodeTool@0
            displayName: "Use Node 10.x"
            inputs:
                versionSpec: 10.x

          - task: UsePythonVersion@0
            displayName: "Use Python 2.x"
            inputs:
                versionSpec: 2.x

          - script: npm install
            displayName: Install dependencies

          - script: npm run build
            displayName: Build application

          - script: npm run semantic-release
            displayName: Version and Tag

    - job: Build
      condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tag'))
      strategy:
          maxParallel: 2
          matrix:
              # linux:
              #     imageName: "ubuntu-16.04"
              mac:
                  imageName: "macos-10.13"
              windows:
                  imageName: "vs2017-win2016"

      pool:
          vmImage: $(imageName)

      steps:
          - task: NodeTool@0
            displayName: "Use Node 10.x"
            inputs:
                versionSpec: 10.x

          - task: UsePythonVersion@0
            displayName: "Use Python 2.x"
            inputs:
                versionSpec: 2.x

          - script: npm install
            displayName: Install dependencies

          - script: npm run build
            displayName: Build application

          - task: CopyFiles@2
            inputs:
                SourceFolder: "$(System.DefaultWorkingDirectory)"
                Contents: |
                    build/*
                    package.json
                TargetFolder: "$(Build.ArtifactStagingDirectory)"

          - task: PublishBuildArtifacts@1

    - job: Deploy_to_Github
      dependsOn: Build
      condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tag'))
      steps:
          - script: echo Build.SourceBranch $(Build.SourceBranch)
            displayName: Variables Debug
